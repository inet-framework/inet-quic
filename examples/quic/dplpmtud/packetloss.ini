[General]
network = Bottleneck2
sim-time-limit = 200s
repeat = 1000
seed-set = ${repetition}
outputvectormanager-class="omnetpp::envir::SqliteOutputVectorManager"
outputscalarmanager-class="omnetpp::envir::SqliteOutputScalarManager"
result-dir="../../../results/quic/dplpmtud/packetloss"

output-vector-file = ${resultdir}/alg=${alg}/lossRate=${lossRate}/${repetition}.vec
output-scalar-file = ${resultdir}/alg=${alg}/lossRate=${lossRate}/${repetition}.sca

**.sender.quic.dplpmtud**.vector-recording = true
**.sender.quic.dplpmtud**.scalar-recording = true
**.scalar-recording = false
**.vector-recording = false
**.param-recording = false

# quic apps
**.sender.numApps = 1
**.sender.app[*].typename = "TrafficgenCompound"
**.sender.app[*].handler.typename = "QuicTrafficgen"
**.sender.app[*].handler.localPort = 1001
**.sender.app[*].handler.connectPort = 1000
**.sender.app[*].handler.connectAddress = "receiver"
**.sender.app[0].numGenerators = 0

**.receiver.numApps = 1
**.receiver.app[*].typename = "QuicDiscardServer"
**.receiver.app[*].localAddress = ""
**.receiver.app[*].localPort = 1000

**.quic.typename = "Quic"
**.sender.quic.useDplpmtud = true
**.sender.quic.dplpmtudMinPmtu = 1280
**.sender.quic.dplpmtudCandidateSequence = ${alg="OptBinary"} #${alg="OptBinary", "Jump"} #${alg="Up","Down","OptUp","Binary","Jump"}
**.sender.quic.dplpmtudUsePtb = false
**.sender.quic.dplpmtudUsePmtuValidator = false
**.sender.quic.dplpmtudMaxProbes = 50
**.sender.quic.skipPacketNumberForDplpmtudProbePackets = true

#**.receiver.quic.numReceivedAckElicitingsBeforeAck = ${pktBeforeAck=2}#1,2}

**.quic.initialMaxData = 4294967295B
**.quic.initialMaxStreamDataUni = 4294967295B
**.quic.initialMaxStreamDataBidiLocal = 4294967295B
**.quic.initialMaxStreamDataBidiRemote = 4294967295B

#**.router1.ppp[1].ppp.mtu = ${mtu= ${alg}=="Up" ? 1500B : (${alg}=="Down" ? 1300B : (${alg}=="OptUp" ? 1496B : (${alg}=="Binary" ? 1500B : (${alg}=="Jump" ? 1396B : 0)))) }
**.router1.ppp[1].ppp.mtu = ${mtu=1496B} #${alg}=="OptBinary" ? 1496B : (${alg}=="Jump" ? 1396B : 0) }
**.router1.ppp[2].ppp.mtu = ${mtu}
**.router2.ppp[1].ppp.mtu = ${mtu}
**.router2.ppp[2].ppp.mtu = ${mtu}
**.ppp[*].ppp.mtu = 1500B

**.linkDatarate = 1Gbps
**.linkDelay = 5ms
**.linkPer = 0
**.bottleneckDatarate = 100Mbps
**.bottleneckDelay = 10ms
**.bottleneckPer = 0
**.bottleneck2Datarate = 100Mbps
**.bottleneck2Delay = 10ms
**.bottleneck2Per = ${lossRate=0, 0.01..0.1 step 0.01}

*.scenarioManager.script = xml("<x> \
<at t='0.04012864'> \
	<disconnect src-module='router1' src-gate='pppg[1]'/> \
</at> </x>")

constraint = ($lossRate) == 0 && ($repetition) == 0 || ($lossRate) > 0
