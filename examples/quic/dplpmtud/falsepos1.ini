[General]
network = Bottleneck
sim-time-limit = 200s
repeat = 1
seed-set = ${repetition}
outputvectormanager-class="omnetpp::envir::SqliteOutputVectorManager"
outputscalarmanager-class="omnetpp::envir::SqliteOutputScalarManager"

output-vector-file = ${resultdir}/falsepos1-pmtuValidator=${pmtuValidator},size=${size},iBit=${iBit}.vec
output-scalar-file = ${resultdir}/falsepos1-pmtuValidator=${pmtuValidator},size=${size},iBit=${iBit}.sca

# quic apps
**.sender.numApps = 1
**.sender.app[*].typename = "TrafficgenCompound"
**.sender.app[*].handler.typename = "QuicTrafficgen"
**.sender.app[*].handler.localPort = 1001
**.sender.app[*].handler.connectPort = 1000
**.sender.app[*].handler.connectAddress = "receiver"
**.sender.app[0].numGenerators = 1
**.sender.app[0].generator[0].typename				= "TrafficgenSimple"
**.sender.app[0].generator[0].id					= 1
#**.sender.app[0].generator[0].packetSize			= ${size=2..10, 20..100 step 10, 200..1000 step 100, 2000..10000 step 1000}kB#2kB,20kB,250kB,1MB,5MB}
**.sender.app[0].generator[0].packetSize			= ${size = 1259, 1585, 1995, 2512, 3162, 3981, 5012, 6310, 7943, 10000, 12589, 15849, 19953, 25119, 31623, 39811, 50119, 63096, 79433, 100000, 125893, 158489, 199526, 251189, 316228, 398107, 501187, 630957, 794328, 1000000, 1258925, 1584893, 1995262, 2511886, 3162278, 3981072, 5011872, 6309573, 7943282, 10000000} B

**.sender.app[0].generator[0].startTime				= 0s
**.sender.app[0].generator[0].stopTime				= 20s
**.sender.app[0].generator[0].packetInterval		= 10s
#**.sender.app[0].generator[0].packetInterval		= ${pktInterval=10}ms

**.receiver.numApps = 1
**.receiver.app[*].typename = "QuicDiscardServer"
**.receiver.app[*].localAddress = ""
**.receiver.app[*].localPort = 1000

**.quic.typename = "Quic"
**.sender.quic.useDplpmtud = true
**.sender.quic.dplpmtudMinPmtu = 1280
**.sender.quic.dplpmtudCandidateSequence = "Down"
**.sender.quic.dplpmtudUsePtb = false
**.sender.quic.dplpmtudUsePmtuValidator = ${pmtuValidator=true,false} 

#**.sender.quic.pmtuValidatorLostPacketsThreshold = ${n=2..4}
**.sender.quic.pmtuValidatorLostPacketsThreshold = ${n=5}
#**.sender.quic.pmtuValidatorTimeThreshold = -${t=0..2}*1s
**.sender.quic.pmtuValidatorTimeThreshold = -${t=0}*1s
**.sender.quic.pmtuValidatorUsePersistentCongestion = true

#**.sender.quic.congestionControl = "No"
#**.receiver.quic.numReceivedAckElicitingsBeforeAck = ${ackFrequency=1,2}
**.quic.useIBit = ${iBit=true,false}

**.quic.initialMaxData = 4294967295B
**.quic.initialMaxStreamDataUni = 4294967295B
**.quic.initialMaxStreamDataBidiLocal = 4294967295B
**.quic.initialMaxStreamDataBidiRemote = 4294967295B

# router/link config
#**.router1.ppp[*].ppp.queue.packetCapacity = 10    # in routers
**.router1.ppp[*].ppp.queue.dataCapacity = 250 kB  # in routers
**.ppp[*].ppp.mtu = 1500B
**.bottleneckDatarate = 100Mbps
**.linkDatarate = 1Gbps
#*.scenarioManager.script = xml("<x> \
#<at t='2'> \
#	<set-param module='BottleneckTraffic.sender.app[0]' par='requestLength' value='intuniform(1000, 1400)'/> \
#	<set-param module='BottleneckTraffic.sender.app[0]' par='thinkTime' value='exponential(${thinkTime=100,50,25,16.67,12.5,10})*1ms'/> \
#</at> </x>")
#*.scenarioManager.script = xml("<x> \
#<at t='3'> \
#	<set-param module='BottleneckTraffic.sender.app[0]' par='thinkTime' value='exponential(${thinkTime=100})*1ms'/> \
#</at> </x>")
#*.scenarioManager.script = xml("<x> \
#<at t='2'> \
#	<set-param module='BottleneckTraffic.sender.app[0]' par='requestLength' value='${l=intuniform(0,2)} == 0 ? 1300 : ${l} == 1 ? 1400 : 5800 '/> \
#	<set-param module='BottleneckTraffic.sender.app[0]' par='thinkTime' value='10ms'/> \
#</at> </x>")

# osbWithHeader = true and ccPmtu
*.scenarioManager.script = xml("<x> \
	<disconnect t='10' src-module='router1' src-gate='pppg[1]'/> \
	<connect t='10.5' src-module='router1' src-gate='pppg[1]' dest-module='router2' dest-gate='pppg[1]' channel-type='ned.DatarateChannel'> \
		<param name='datarate' value='bottleneckDatarate' /> \
		<param name='delay' value='bottleneckDelay' /> \
		<param name='per' value='bottleneckPer' /> \
	</connect> \
</x>")

#	<set-param t='0.1385' module='Bottleneck.sender.app[0].generator[0]' par='packetInterval' value='200s'/> \

# 60 MB IP Packets
#	<set-param t='5.5137' module='Bottleneck.sender.app[0]' par='thinkTime' value='100s'/> \

# osbWithHeader = true
#*.scenarioManager.script = xml("<x> \
#	<set-param t='0.1371' module='Bottleneck.sender.app[0]' par='thinkTime' value='1.3741s'/> \
#	<set-param t='0.2' module='Bottleneck.sender.app[0]' par='thinkTime' value='0.1ms'/> \
#	<set-param t='10' module='Bottleneck.sender.app[0]' par='thinkTime' value='100s'/> \
#</x>")

# osbWithHeader = false
#*.scenarioManager.script = xml("<x> \
#	<set-param t='0.1363' module='Bottleneck.sender.app[0]' par='thinkTime' value='1.3647s'/> \
#	<set-param t='0.2' module='Bottleneck.sender.app[0]' par='thinkTime' value='0.1ms'/> \
#	<set-param t='10' module='Bottleneck.sender.app[0]' par='thinkTime' value='100s'/> \
#</x>")

#	<set-param t='0.2' module='Bottleneck.sender.app[0]' par='thinkTime' value='0.1ms'/> \
#	<set-param t='10' module='Bottleneck.sender.app[0]' par='thinkTime' value='100s'/> \

#	<set-param t='0.1364' module='Bottleneck.sender.app[0]' par='thinkTime' value='1.1647s'/> \
#	<set-param t='1.3010' module='Bottleneck.sender.app[0]' par='thinkTime' value='0.1ms'/> \
#	<set-param t='10' module='Bottleneck.sender.app[0]' par='thinkTime' value='100s'/> 
