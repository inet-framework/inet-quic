[General]
network = Bottleneck
sim-time-limit = 200s
repeat = 100
seed-set = ${repetition}
outputvectormanager-class="omnetpp::envir::SqliteOutputVectorManager"
outputscalarmanager-class="omnetpp::envir::SqliteOutputScalarManager"
result-dir="../../../results/quic/dplpmtud/transmission2"

output-vector-file = ${resultdir}/alg=${alg}/pmtu=${pmtu}/pktInterval=${pktInterval}/pktBeforeAck=${pktBeforeAck}/${repetition}.vec
output-scalar-file = ${resultdir}/alg=${alg}/pmtu=${pmtu}/pktInterval=${pktInterval}/pktBeforeAck=${pktBeforeAck}/${repetition}.sca

#**.sender.quic.dplpmtud**.vector-recording = true
**.sender.quic.dplpmtud**.scalar-recording = true
**.scalar-recording = false
**.vector-recording = false
**.param-recording = false

# quic apps
**.sender.numApps = 1
**.sender.app[*].typename = "TrafficgenCompound"
**.sender.app[*].handler.typename = "QuicTrafficgen"
**.sender.app[*].handler.localPort = 1001
**.sender.app[*].handler.connectPort = 1000
**.sender.app[*].handler.connectAddress = "receiver"
**.sender.app[0].numGenerators = ${pktInterval}>0 ? 1 : 0
**.sender.app[0].generator[0].typename				= "TrafficgenSimple"
**.sender.app[0].generator[0].id					= 1
**.sender.app[0].generator[0].packetSize			= 1000B #50MB
**.sender.app[0].generator[0].startTime				= uniform(40.12861, 40.12861+${pktInterval})*1ms
**.sender.app[0].generator[0].stopTime				= 5s
#**.sender.app[0].generator[0].packetInterval		= exponential( ${pktInterval=0, 10000.00, 7943.28, 6309.57, 5011.87, 3981.07, 3162.28, 2511.89, 1995.26, 1584.89, 1258.93, 1000.00, 794.33, 630.96, 501.19, 398.11, 316.23, 251.19, 199.53, 158.49, 125.89, 100.00, 79.43, 63.10, 50.12, 39.81, 31.62, 25.12, 19.95, 15.85, 12.59, 10.00, 7.94, 6.31, 5.01, 3.98, 3.16, 2.51, 2.00, 1.58, 1.26, 1.00, 0.79, 0.63, 0.50, 0.40, 0.32, 0.25, 0.20} )*1ms
**.sender.app[0].generator[0].packetInterval		= exponential( ${pktInterval=0, 15848.9319, 12589.2541, 10000, 7943.2823, 6309.5734, 5011.8723, 3981.0717, 3162.2777, 2511.8864, 1995.2623, 1584.8932, 1258.9254, 1000, 794.3282, 630.9573, 501.1872, 398.1072, 316.2278, 251.1886, 199.5262, 158.4893, 125.8925, 100, 79.4328, 63.0957, 50.1187, 39.8107, 31.6228, 25.1189, 19.9526, 15.8489, 12.5893, 10, 7.9433, 6.3096, 5.0119, 3.9811, 3.1623, 2.5119, 1.9953, 1.5849, 1.2589, 1, 0.7943, 0.631, 0.5012, 0.3981} )*1ms

**.receiver.numApps = 1
**.receiver.app[*].typename = "QuicDiscardServer"
**.receiver.app[*].localAddress = ""
**.receiver.app[*].localPort = 1000

**.quic.typename = "Quic"
**.sender.quic.useDplpmtud = true
**.sender.quic.dplpmtudMinPmtu = 1280
**.sender.quic.dplpmtudCandidateSequence = ${alg="OptBinary"} #${alg="OptBinary", "Jump"}
**.sender.quic.dplpmtudUsePtb = false
**.sender.quic.skipPacketNumberForDplpmtudProbePackets = true

**.receiver.quic.numReceivedAckElicitingsBeforeAck = ${pktBeforeAck=2}#1,2}

**.quic.initialMaxData = 4294967295B
**.quic.initialMaxStreamDataUni = 4294967295B
**.quic.initialMaxStreamDataBidiLocal = 4294967295B
**.quic.initialMaxStreamDataBidiRemote = 4294967295B

**.router1.ppp[1].ppp.mtu = ${pmtu=1284}B #${pmtu=1284, 1396, 1496}B
**.router2.ppp[0].ppp.mtu = ${pmtu}B
**.ppp[*].ppp.mtu = 1500B
**.router1.ppp[*].ppp.queue.dataCapacity = 250 kB
**.linkDatarate = 1Gbps
**.linkDelay = 5ms
**.bottleneckDatarate = 100Mbps
**.bottleneckDelay = 10ms

#constraint = ( ($pktInterval) == 0 && ($repetition) == 0 || ($pktInterval) > 0 ) && ( (($alg) == "OptBinary" && (($pmtu) == 1284 || ($pmtu) == 1496)) || (($alg) == "Jump" && (($pmtu) == 1284 || ($pmtu) == 1396)) )

