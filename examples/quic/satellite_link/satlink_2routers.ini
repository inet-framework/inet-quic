[General]
network = satlink_2routers

outputvectormanager-class="omnetpp::envir::SqliteOutputVectorManager"
outputscalarmanager-class="omnetpp::envir::SqliteOutputScalarManager"

**.quic.typename = "Quic"

#------------configuration from Fairhurst's paper -------------------
**.downlinkDatarate=8500kbps
**.uplinkDatarate = 1500kbps #1500kbps#100kbps
**.linkDelay = 300ms

**.router2.ppp[2].queue.frameCapacity = 90 #8
**.ppp[*].queue.frameCapacity = 498
#--------------------------------------------------------------------

#------------satcom draft config-------------------------------------
#**.downlinkDatarate=10Mbps
#**.uplinkDatarate = 2Mbps #1500kbps#100kbps
#**.linkDelay = 300ms
#
#**.router2.ppp[2].queue.frameCapacity = 118 #8
#**.ppp[*].queue.frameCapacity = 584
#--------------------------------------------------------------------

# Flow Control
**.quic.initialMaxData = ${rwndLimit =1229kB} #4294967295B 15MB 6MB 3687kB 1532kB
**.quic.initialMaxStreamDataBidiRemote = ${rwndStreamLimit = 766kB} #4294967295B 6MB 1229kB 615kB  730kB 766kB
**.quic.initialMaxStreamDataUni = ${rwndStreamLimit}
**.quic.initialMaxStreamDataBidiLocal = ${rwndStreamLimit}
**.quic.maxDataFrameThreshold =  0.5*${rwndLimit}
**.quic.maxStreamDataFrameThreshold = 0.5*${rwndStreamLimit}
**.roundConsumedDataValue = ${round = true}
**.server.quic.sendMaxDataFramesImmediately = true

**.ppp[*].ppp.mtu = ${mtu=1280}B

**.client.numApps = 1
**.client.app[*].typename = "TrafficgenCompound"
**.client.app[0].numGenerators = 1
#--------------first stream---------------------------
**.client.app[0].generator[0].typename				= "TrafficgenSimple"
**.client.app[0].generator[0].id					= 0
**.client.app[0].generator[0].packetSize			= 15000B
**.client.app[0].generator[0].startTime				= 2s
**.client.app[0].generator[0].stopTime				= 100s
**.client.app[0].generator[0].packetInterval		= 0ms
**.client.app[0].generator[0].ordered				= false

**.client.app[*].handler.typename = "QuicTrafficgen"
**.client.app[*].handler.localPort = 1001
**.client.app[*].handler.connectPort = 1000
**.client.app[*].handler.connectAddress = "server"

# sendBufferUnsentData_min = sendQueueLimit * sendQueueLowWaterRation - cwnd_max > 0
# <==> sendQueueLimit > cwnd_max/LowWaterRatio = (BDP + RouterBuffer)/LowWaterRatio
**.client.quic.sendQueueLimit = 24MB
**.client.quic.sendQueueLowWaterRatio = .8
**.client.quic.sendLossRate = ${p=0} #${p=0, 0.001, 0.0001, 0.00001}

**.quic.bundleAckForNonAckElicitingPackets = ${bundle = false}
**.client.quic.accurateIncreaseInNewRenoCongestionAvoidance = false

**.server.numApps = 1
**.server.app[*].typename = "QuicDiscardServer"
**.server.app[*].localAddress = ""
**.server.app[*].localPort = 1000

**.server.quic.receiveGoodputStatStartTime = 3s
**.server.quic.receiveGoodputStatEndTime =99s

**.server.quic.numReceivedAckElicitingsBeforeAck = ${ackRatio=2}

