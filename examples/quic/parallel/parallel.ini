[General]
network = Parallel
#repeat = 10
sim-time-limit = 500s

seed-set = ${repetition}
outputvectormanager-class="omnetpp::envir::SqliteOutputVectorManager"
outputscalarmanager-class="omnetpp::envir::SqliteOutputScalarManager"
result-dir="../../../results/quic/parallel"

**.sender.quic.dplpmtudSearchTime**.scalar-recording = true
**.receiver.app[0].bytesReceived:vector.vector-recording = true
**.sender.ppp[0].ppp.txPk:count.scalar-recording = true
**.scalar-recording = false
**.vector-recording = false
**.param-recording = false

**.quic.typename = "Quic"

**.sender.quic.useDplpmtud = true
**.sender.quic.dplpmtudMinPmtu = 1280
**.sender.quic.dplpmtudCandidateSequence = "OptBinary"
**.sender.quic.dplpmtudUsePtb = ${ptb=true, false}
**.sender.quic.skipPacketNumberForDplpmtudProbePackets = true
#**.sender.quic.sendDataDuringInitalDplpmtudBase = false

**.sender.quic.congestionControl = "NewReno"#"No"

**.quic.initialMaxData = 4294967295B
**.quic.initialMaxStreamDataUni = 4294967295B
**.quic.initialMaxStreamDataBidiLocal = 4294967295B
**.quic.initialMaxStreamDataBidiRemote = 4294967295B


# quic apps
**.sender.numApps = 1
**.sender.app[*].typename = "TrafficgenCompound"
**.sender.app[*].handler.typename = "QuicTrafficgen"
**.sender.app[*].handler.localPort = 1001
**.sender.app[*].handler.connectPort = 1000
**.sender.app[*].handler.connectAddress = "receiver"
**.sender.app[0].numGenerators = (${msgLength} == 0 ? 0 : 1)
**.sender.app[0].generator[0].typename				= "TrafficgenSimple"
**.sender.app[0].generator[0].id					= 1
**.sender.app[0].generator[0].startTime				= 0.04012865s
**.sender.app[0].generator[0].packetSize			= ${msgLength=0, 1000, 10000, 100000, 1000000, 10000000, 100000000}B
**.sender.app[0].generator[0].packetCount			= 1

**.receiver.numApps = 1
**.receiver.app[*].typename = "QuicDiscardServer"
**.receiver.app[*].localAddress = ""
**.receiver.app[*].localPort = 1000

**.router*.ppp[*].queue.dataCapacity = 4000 kb
**.router1.ipv4.icmp.quoteLength = 100B + 8B
**.router1.ppp[1].ppp.mtu = ${pmtu=1280..1500 step 4}B
#**.router1.ppp[1].ppp.mtu = ${pmtu=1492}B
**.router2.ppp[0].ppp.mtu = ${pmtu}B
**.ppp[*].ppp.mtu = 1500B

**.link1Datarate = 1Gbps
**.link1Delay = 5ms
**.link1Per = 0
**.link2Datarate = 100Mbps
**.link2Delay = 10ms
**.link2Per = 0
**.link3Datarate = 1Gbps
**.link3Delay = 5ms
**.link3Per = 0

**.sender.quic.useCwndForParallelProbes = ${parallelMode=0, 1, 2}

output-vector-file = ${resultdir}/mode=${parallelMode}/ptb=${ptb}/msgLength=${msgLength}/pmtu=${pmtu}/${repetition}.vec
output-scalar-file = ${resultdir}/mode=${parallelMode}/ptb=${ptb}/msgLength=${msgLength}/pmtu=${pmtu}/${repetition}.sca
