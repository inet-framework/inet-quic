[General]
network = Byte_order
sim-time-limit = 200s
#repeat = 50
repeat = 1
seed-set = ${repetition}
#outputvectormanager-class="omnetpp::envir::SqliteOutputVectorManager"
#outputscalarmanager-class="omnetpp::envir::SqliteOutputScalarManager"

#output-vector-file = ${resultdir}/decrease_fullsized-pktInterval=${pktInterval},n=${n},t=${t},reduceTlpSize=${reduceTlpSize},reduceTlpSizeOnlyIf=${reduceTlpSizeOnlyIf},persistenCongestions=${pc}-${repetition}.vec
#output-scalar-file = ${resultdir}/decrease_fullsized-pktInterval=${pktInterval},n=${n},t=${t},reduceTlpSize=${reduceTlpSize},reduceTlpSizeOnlyIf=${reduceTlpSizeOnlyIf},persistenCongestions=${pc}-${repetition}.sca

**.sender.quic.dplpmtud**.vector-recording = true
**.sender.quic.dplpmtud**.scalar-recording = true
**.router1.ipv4.ip.packetDrop**.vector-recording = true
**.scalar-recording = false
**.vector-recording = false

# tcp apps

# quic apps
**.sender.numApps = 1
**.sender.app[*].typename = "TrafficgenCompound"
**.sender.app[*].handler.typename = "QuicOrderedTrafficgen"
**.sender.app[*].handler.localPort = 1001
**.sender.app[*].handler.connectPort = 1000
**.sender.app[*].handler.connectAddress = "receiver"
**.sender.app[0].numGenerators = 1
**.sender.app[0].generator[0].typename				= "TrafficgenSimple"
**.sender.app[0].generator[0].id					= 1
**.sender.app[0].generator[0].packetSize			= 1442B
**.sender.app[0].generator[0].startTime				= 0s
**.sender.app[0].generator[0].stopTime				= 10s
**.sender.app[0].generator[0].packetInterval		= ${pktInterval=100}*1ms

**.receiver.numApps = 1
**.receiver.app[*].typename = "QuicOrderedReceiver"
**.receiver.app[*].localAddress = ""
**.receiver.app[*].localPort = 1000

**.quic.typename = "Quic"
**.sender.quic.useDplpmtud = true
**.sender.quic.dplpmtudMinPmtu = 1280
**.sender.quic.dplpmtudCandidateSequence = "Down"
**.sender.quic.dplpmtudUsePtb = false
#**.sender.quic.reduceTlpSize = ${reduceTlpSize=0,1,2,3}
#**.sender.quic.reduceTlpSizeOnlyIfPmtuInvalidPossible = ${reduceTlpSizeOnlyIf=false}

**.sender.quic.pmtuValidatorLostPacketsThreshold = ${n=10}
#**.sender.quic.pmtuValidatorTimeThreshold = ${t=0, 100, 200, 300, 400, 500, 600}ms
#**.sender.quic.pmtuValidatorInvalidOnPersistentCongestion = ${pc=0, 1, 2, 3}
**.sender.quic.reducePacketTimeThreshold = 50ms

**.sender.quic.congestionControl = "NewReno"#"No"

**.quic.initialMaxData = 4294967295B
**.quic.initialMaxStreamDataUni = 4294967295B
**.quic.initialMaxStreamDataBidiLocal = 4294967295B
**.quic.initialMaxStreamDataBidiRemote = 4294967295B

#**.router1.ppp[2].ppp.mtu = 1280B
#**.router2.ppp[2].ppp.mtu = 1280B
**.ppp[*].ppp.mtu = 1500B

**.bottleneckPer = 0.10

